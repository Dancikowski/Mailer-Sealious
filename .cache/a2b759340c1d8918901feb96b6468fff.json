{"id":"node_modules/sealious/lib/chip-types/datastore.js","dependencies":[{"name":"/home/damian/WebDevelop/Mailer/node_modules/sealious/package.json","includedInParent":true,"mtime":1535449788142},{"name":"/home/damian/WebDevelop/Mailer/package.json","includedInParent":true,"mtime":1535629319042},{"name":"/home/damian/WebDevelop/Mailer/.babelrc","includedInParent":true,"mtime":1535628035006},{"name":"locreq","loc":{"line":2,"column":23},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/datastore.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/locreq/index.js"},{"name":"assert","loc":{"line":3,"column":23},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/datastore.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/assert/assert.js"},{"name":"./chip.js","loc":{"line":4,"column":21},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/datastore.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/chip.js"},{"name":"bluebird","loc":{"line":5,"column":24},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/datastore.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/bluebird/js/browser/bluebird.js"}],"generated":{"js":"var __dirname = \"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types\";\n\"use strict\";\nconst locreq = require(\"locreq\")(__dirname);\nconst assert = require(\"assert\");\nconst Chip = require(\"./chip.js\");\nconst Promise = require(\"bluebird\");\n\nconst Errors = locreq(\"lib/response/error.js\");\n\nconst Datastore = function(app, declaration) {\n\tthis.name = declaration.name;\n\tthis.longid = `${Datastore.type_name}.${this.name}`;\n};\n\nDatastore.type_name = \"datastore\";\n\nDatastore.prototype = new Chip();\n\nconst needs_to_implement = [\"find\", \"insert\", \"update\", \"remove\"];\n\nDatastore.prototype.return_not_implemented = function(fn_name) {\n\treturn function() {\n\t\tthrow new Errors.DeveloperError(\n\t\t\t\"Function \",\n\t\t\tfn_name,\n\t\t\t\"not implemented in \",\n\t\t\tthis.longid,\n\t\t\t\", aborting.\"\n\t\t);\n\t};\n};\n\n/*\nTests datastore compatibility with Sealious. It is a cascade of Promises, which result will be logged in console.\n*/\nDatastore.prototype.test_compatibility = function() {\n\tconst self = this;\n\tthis.start();\n\tconst rand = Math.random();\n\n\tconst test_collection_name = \"_test\";\n\n\treturn Promise.resolve()\n\t\t.then(function() {\n\t\t\t// .insert method should respond with the created document\n\t\t\tconst to_insert = {\n\t\t\t\tvalue: 1,\n\t\t\t\trandom: rand,\n\t\t\t};\n\t\t\treturn self\n\t\t\t\t.insert(test_collection_name, to_insert)\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tto_insert,\n\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\".insert method should respond with the created document\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\t// check if find resolves with an array\n\n\t\t\treturn self\n\t\t\t\t.find(test_collection_name, {}, {})\n\t\t\t\t.then(function(documents) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tdocuments instanceof Array,\n\t\t\t\t\t\t`datastore.${\n\t\t\t\t\t\t\tself.name\n\t\t\t\t\t\t}.find should resolve with an array`\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\t// check if amount of created documents checks out\n\t\t\tconst creates = [\n\t\t\t\tself.insert(test_collection_name, {\n\t\t\t\t\tvalue: 2,\n\t\t\t\t\trandom: rand,\n\t\t\t\t}),\n\t\t\t\tself.insert(test_collection_name, {\n\t\t\t\t\tvalue: 3,\n\t\t\t\t\trandom: rand,\n\t\t\t\t}),\n\t\t\t\tself.insert(test_collection_name, {\n\t\t\t\t\tvalue: 4,\n\t\t\t\t\trandom: -rand,\n\t\t\t\t}),\n\t\t\t];\n\n\t\t\tconst created_so_far = 4;\n\t\t\treturn Promise.all(creates)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {}, {});\n\t\t\t\t})\n\t\t\t\t.then(function(documents) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tdocuments.length === created_so_far,\n\t\t\t\t\t\t`Inserted ${created_so_far} documents so far, but ${\n\t\t\t\t\t\t\tdocuments.length\n\t\t\t\t\t\t} were returned on .find()`\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(created_so_far);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(created_so_far) {\n\t\t\t// check if there is a proper amount of documents with random value set to rand\n\t\t\tconst documents_with_rand = created_so_far - 1;\n\t\t\treturn self\n\t\t\t\t.find(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\trandom: rand,\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.then(function(documents) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tdocuments.length === documents_with_rand,\n\t\t\t\t\t\t`Inserted ${documents_with_rand} documents with \"random\" set to \"${rand}\" so far, but ${\n\t\t\t\t\t\t\tdocuments.length\n\t\t\t\t\t\t} were returned on .find({random: ${rand}})`\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\t// Should store a complex object\n\t\t\tconst complex_object = {\n\t\t\t\tid: \"aseoifaoeina\",\n\t\t\t\tbody: {\n\t\t\t\t\tname: \"Anna\",\n\t\t\t\t\tsurname: \"Fontanna\",\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn self\n\t\t\t\t.insert(test_collection_name, complex_object)\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\".insert with complex object should resolve with that complex object.\"\n\t\t\t\t\t);\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse[0],\n\t\t\t\t\t\t\".insert with complex object should store that complex object.\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// Should handle dot-notation nested queries\n\t\t\treturn self\n\t\t\t\t.find(test_collection_name, {\n\t\t\t\t\t\"body.name\": complex_object.body.name,\n\t\t\t\t})\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse[0],\n\t\t\t\t\t\t\".find method should handle dot notation queries\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\treturn self\n\t\t\t\t.find(test_collection_name, {\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tname: complex_object.body.name,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse[0],\n\t\t\t\t\t\t\".find method should handle nested object queries\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .update should modify document values with dot notation\n\t\t\tcomplex_object.body.name = \"Hanna\";\n\t\t\treturn self\n\t\t\t\t.update(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"body.name\": complex_object.body.name,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresults[0],\n\t\t\t\t\t\t\".update should modify document values with dot notation\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .update should modify document values using nested object as a query\n\t\t\tcomplex_object.body.name = \"Marzanna\";\n\t\t\treturn self\n\t\t\t\t.update(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tname: complex_object.body.name,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresults[0],\n\t\t\t\t\t\t\".update should modify document values using nested object as a query \"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .update should insert new value to a field that previously had no value (undefined)\n\t\t\tcomplex_object.body.other = \"Focca\";\n\t\t\treturn self\n\t\t\t\t.update(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tother: complex_object.body.other,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresults[0],\n\t\t\t\t\t\t\".update should insert new value to a field that previously had no value (undefined)\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .remove should remove only one document when \"just_one\" is set to true\n\t\t\treturn Promise.all([\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t])\n\t\t\t\t.then(function() {\n\t\t\t\t\t// all the \"complex_object\" documents have the same id\n\t\t\t\t\treturn self.remove(\n\t\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tresults.length === 3,\n\t\t\t\t\t\t\".remove should remove only *one* document when `just_one` argument is set to true\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .remove should remove all matching documents when \"just_one\" is falsy\n\t\t\treturn Promise.all([\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t])\n\t\t\t\t.then(function() {\n\t\t\t\t\t// all the \"complex_object\" documents have the same id\n\t\t\t\t\treturn self.remove(\n\t\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tresults.length === 0,\n\t\t\t\t\t\t\".remove should remove all matching documents when 'just_one' is falsy\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\tself.clear_collection(test_collection_name);\n\t\t})\n\t\t.catch(function() {\n\t\t\tself.clear_collection(test_collection_name);\n\t\t\treturn Promise.reject(\"Compatibility test unsuccesfull\");\n\t\t});\n};\n\nmodule.exports = Datastore;\n","map":{"mappings":[{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/sealious/lib/chip-types/datastore.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}}],"sources":{"node_modules/sealious/lib/chip-types/datastore.js":"\"use strict\";\nconst locreq = require(\"locreq\")(__dirname);\nconst assert = require(\"assert\");\nconst Chip = require(\"./chip.js\");\nconst Promise = require(\"bluebird\");\n\nconst Errors = locreq(\"lib/response/error.js\");\n\nconst Datastore = function(app, declaration) {\n\tthis.name = declaration.name;\n\tthis.longid = `${Datastore.type_name}.${this.name}`;\n};\n\nDatastore.type_name = \"datastore\";\n\nDatastore.prototype = new Chip();\n\nconst needs_to_implement = [\"find\", \"insert\", \"update\", \"remove\"];\n\nDatastore.prototype.return_not_implemented = function(fn_name) {\n\treturn function() {\n\t\tthrow new Errors.DeveloperError(\n\t\t\t\"Function \",\n\t\t\tfn_name,\n\t\t\t\"not implemented in \",\n\t\t\tthis.longid,\n\t\t\t\", aborting.\"\n\t\t);\n\t};\n};\n\n/*\nTests datastore compatibility with Sealious. It is a cascade of Promises, which result will be logged in console.\n*/\nDatastore.prototype.test_compatibility = function() {\n\tconst self = this;\n\tthis.start();\n\tconst rand = Math.random();\n\n\tconst test_collection_name = \"_test\";\n\n\treturn Promise.resolve()\n\t\t.then(function() {\n\t\t\t// .insert method should respond with the created document\n\t\t\tconst to_insert = {\n\t\t\t\tvalue: 1,\n\t\t\t\trandom: rand,\n\t\t\t};\n\t\t\treturn self\n\t\t\t\t.insert(test_collection_name, to_insert)\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tto_insert,\n\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\".insert method should respond with the created document\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\t// check if find resolves with an array\n\n\t\t\treturn self\n\t\t\t\t.find(test_collection_name, {}, {})\n\t\t\t\t.then(function(documents) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tdocuments instanceof Array,\n\t\t\t\t\t\t`datastore.${\n\t\t\t\t\t\t\tself.name\n\t\t\t\t\t\t}.find should resolve with an array`\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\t// check if amount of created documents checks out\n\t\t\tconst creates = [\n\t\t\t\tself.insert(test_collection_name, {\n\t\t\t\t\tvalue: 2,\n\t\t\t\t\trandom: rand,\n\t\t\t\t}),\n\t\t\t\tself.insert(test_collection_name, {\n\t\t\t\t\tvalue: 3,\n\t\t\t\t\trandom: rand,\n\t\t\t\t}),\n\t\t\t\tself.insert(test_collection_name, {\n\t\t\t\t\tvalue: 4,\n\t\t\t\t\trandom: -rand,\n\t\t\t\t}),\n\t\t\t];\n\n\t\t\tconst created_so_far = 4;\n\t\t\treturn Promise.all(creates)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {}, {});\n\t\t\t\t})\n\t\t\t\t.then(function(documents) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tdocuments.length === created_so_far,\n\t\t\t\t\t\t`Inserted ${created_so_far} documents so far, but ${\n\t\t\t\t\t\t\tdocuments.length\n\t\t\t\t\t\t} were returned on .find()`\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(created_so_far);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(created_so_far) {\n\t\t\t// check if there is a proper amount of documents with random value set to rand\n\t\t\tconst documents_with_rand = created_so_far - 1;\n\t\t\treturn self\n\t\t\t\t.find(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\trandom: rand,\n\t\t\t\t\t},\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.then(function(documents) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tdocuments.length === documents_with_rand,\n\t\t\t\t\t\t`Inserted ${documents_with_rand} documents with \"random\" set to \"${rand}\" so far, but ${\n\t\t\t\t\t\t\tdocuments.length\n\t\t\t\t\t\t} were returned on .find({random: ${rand}})`\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\t// Should store a complex object\n\t\t\tconst complex_object = {\n\t\t\t\tid: \"aseoifaoeina\",\n\t\t\t\tbody: {\n\t\t\t\t\tname: \"Anna\",\n\t\t\t\t\tsurname: \"Fontanna\",\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn self\n\t\t\t\t.insert(test_collection_name, complex_object)\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\".insert with complex object should resolve with that complex object.\"\n\t\t\t\t\t);\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse[0],\n\t\t\t\t\t\t\".insert with complex object should store that complex object.\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// Should handle dot-notation nested queries\n\t\t\treturn self\n\t\t\t\t.find(test_collection_name, {\n\t\t\t\t\t\"body.name\": complex_object.body.name,\n\t\t\t\t})\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse[0],\n\t\t\t\t\t\t\".find method should handle dot notation queries\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\treturn self\n\t\t\t\t.find(test_collection_name, {\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tname: complex_object.body.name,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresponse[0],\n\t\t\t\t\t\t\".find method should handle nested object queries\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .update should modify document values with dot notation\n\t\t\tcomplex_object.body.name = \"Hanna\";\n\t\t\treturn self\n\t\t\t\t.update(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"body.name\": complex_object.body.name,\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresults[0],\n\t\t\t\t\t\t\".update should modify document values with dot notation\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .update should modify document values using nested object as a query\n\t\t\tcomplex_object.body.name = \"Marzanna\";\n\t\t\treturn self\n\t\t\t\t.update(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tname: complex_object.body.name,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresults[0],\n\t\t\t\t\t\t\".update should modify document values using nested object as a query \"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .update should insert new value to a field that previously had no value (undefined)\n\t\t\tcomplex_object.body.other = \"Focca\";\n\t\t\treturn self\n\t\t\t\t.update(\n\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tother: complex_object.body.other,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert.deepEqual(\n\t\t\t\t\t\tcomplex_object,\n\t\t\t\t\t\tresults[0],\n\t\t\t\t\t\t\".update should insert new value to a field that previously had no value (undefined)\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .remove should remove only one document when \"just_one\" is set to true\n\t\t\treturn Promise.all([\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t])\n\t\t\t\t.then(function() {\n\t\t\t\t\t// all the \"complex_object\" documents have the same id\n\t\t\t\t\treturn self.remove(\n\t\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tresults.length === 3,\n\t\t\t\t\t\t\".remove should remove only *one* document when `just_one` argument is set to true\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function(complex_object) {\n\t\t\t// .remove should remove all matching documents when \"just_one\" is falsy\n\t\t\treturn Promise.all([\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t\tself.insert(test_collection_name, complex_object),\n\t\t\t])\n\t\t\t\t.then(function() {\n\t\t\t\t\t// all the \"complex_object\" documents have the same id\n\t\t\t\t\treturn self.remove(\n\t\t\t\t\t\ttest_collection_name,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.then(function() {\n\t\t\t\t\treturn self.find(test_collection_name, {\n\t\t\t\t\t\tid: complex_object.id,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(function(results) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tresults.length === 0,\n\t\t\t\t\t\t\".remove should remove all matching documents when 'just_one' is falsy\"\n\t\t\t\t\t);\n\t\t\t\t\treturn Promise.resolve(complex_object);\n\t\t\t\t});\n\t\t})\n\t\t.then(function() {\n\t\t\tself.clear_collection(test_collection_name);\n\t\t})\n\t\t.catch(function() {\n\t\t\tself.clear_collection(test_collection_name);\n\t\t\treturn Promise.reject(\"Compatibility test unsuccesfull\");\n\t\t});\n};\n\nmodule.exports = Datastore;\n"},"lineCount":345}},"hash":"40617de3dcef5d6a0b0ef7822ae6edc1","cacheData":{"env":{}}}