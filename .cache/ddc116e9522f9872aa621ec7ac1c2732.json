{"id":"node_modules/sealious/lib/chip-types/collection.js","dependencies":[{"name":"/home/damian/WebDevelop/Mailer/node_modules/sealious/package.json","includedInParent":true,"mtime":1535449788142},{"name":"/home/damian/WebDevelop/Mailer/package.json","includedInParent":true,"mtime":1535629319042},{"name":"/home/damian/WebDevelop/Mailer/.babelrc","includedInParent":true,"mtime":1535628035006},{"name":"locreq","loc":{"line":2,"column":23},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/locreq/index.js"},{"name":"bluebird","loc":{"line":3,"column":24},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/bluebird/js/browser/bluebird.js"},{"name":"assert","loc":{"line":4,"column":23},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/assert/assert.js"},{"name":"merge","loc":{"line":5,"column":22},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/merge/merge.js"},{"name":"clone","loc":{"line":6,"column":22},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/clone/clone.js"},{"name":"./chip.js","loc":{"line":9,"column":21},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/chip.js"},{"name":"./field.js","loc":{"line":10,"column":22},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/field.js"},{"name":"./calculated-field.js","loc":{"line":11,"column":32},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/calculated-field.js"},{"name":"./access-strategy.js","loc":{"line":12,"column":31},"parent":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/collection.js","resolved":"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types/access-strategy.js"}],"generated":{"js":"var __dirname = \"/home/damian/WebDevelop/Mailer/node_modules/sealious/lib/chip-types\";\n\"use strict\";\nconst locreq = require(\"locreq\")(__dirname);\nconst Promise = require(\"bluebird\");\nconst assert = require(\"assert\");\nconst merge = require(\"merge\");\nconst clone = require(\"clone\");\n\nconst Errors = locreq(\"lib/response/error.js\");\nconst Chip = require(\"./chip.js\");\nconst Field = require(\"./field.js\");\nconst CalculatedField = require(\"./calculated-field.js\");\nconst AccessStrategy = require(\"./access-strategy.js\");\nconst AccessStrategyType = locreq(\"lib/chip-types/access-strategy-type.js\");\n\nconst Collection = function(app, declaration) {\n\tif (typeof declaration === \"string\") {\n\t\treturn app.ChipManager.get_chip(\"collection\", declaration);\n\t} else if (declaration instanceof Collection) {\n\t\treturn declaration;\n\t}\n\n\tconst self = this;\n\tChip.call(this, \"collection\", declaration.name);\n\tthis.app = app;\n\tthis.name = declaration.name;\n\tthis.fields = {};\n\tthis.human_readable_name = declaration.human_readable_name;\n\tthis.summary = declaration.summary;\n\tthis.access_strategy = {\n\t\tdefault: new AccessStrategy(app, \"public\", {}),\n\t};\n\tassert(\n\t\tdeclaration.named_filters === undefined ||\n\t\t\ttypeof declaration.named_filters === \"object\"\n\t);\n\tthis.named_filters = declaration.named_filters || [];\n\n\tif (declaration) {\n\t\tif (declaration.fields) {\n\t\t\tfor (let i = 0; i < declaration.fields.length; i++) {\n\t\t\t\tif (declaration.fields[i].params) {\n\t\t\t\t\tif (typeof declaration.fields[i].params !== \"object\") {\n\t\t\t\t\t\tthrow new Errors.ValidationError(\n\t\t\t\t\t\t\t`In field \"${\n\t\t\t\t\t\t\t\tdeclaration.fields[i].name\n\t\t\t\t\t\t\t}\": \"params\" is of wrong type, it should be an object`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.add_fields(declaration.fields);\n\t\t}\n\n\t\tthis.calculated_fields = [];\n\t\tif (declaration.calculated_fields) {\n\t\t\tfor (const calc_field_name in declaration.calculated_fields) {\n\t\t\t\tconst calc_field_type_declaration =\n\t\t\t\t\tdeclaration.calculated_fields[calc_field_name][0];\n\t\t\t\tconst calc_field_type_params =\n\t\t\t\t\tdeclaration.calculated_fields[calc_field_name][1];\n\t\t\t\tthis.add_calculated_field(\n\t\t\t\t\tcalc_field_name,\n\t\t\t\t\tcalc_field_type_declaration,\n\t\t\t\t\tcalc_field_type_params\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_access_strategy(declaration.access_strategy);\n\t}\n};\n\nCollection.type_name = \"collection\";\n\nCollection.pure = {\n\tadd_field: function(\n\t\tapp,\n\t\tfield_type,\n\t\tfields,\n\t\tfield_declaration,\n\t\tcollection\n\t) {\n\t\tconst field_object = new Field(\n\t\t\tapp,\n\t\t\tfield_declaration,\n\t\t\tfield_type,\n\t\t\tcollection\n\t\t);\n\t\tconst field_name = field_object.name;\n\t\tif (!fields[field_name]) {\n\t\t\tfields[field_name] = field_object;\n\t\t} else {\n\t\t\tthrow new Errors.DeveloperError(\n\t\t\t\t`Duplicate field names: \"${field_name}\" in collection: \"${\n\t\t\t\t\tfield_type.name\n\t\t\t\t}\"`\n\t\t\t);\n\t\t}\n\t},\n\tadd_fields: function(app, field_type, fields, field_declarations_array) {\n\t\tfor (const i in field_declarations_array) {\n\t\t\tconst declaration = field_declarations_array[i];\n\t\t\tCollection.pure.add_field(app, field_type, fields, declaration);\n\t\t}\n\t},\n\tadd_calculated_field: function(\n\t\tapp,\n\t\tcollection,\n\t\tcalc_field_name,\n\t\tcalc_field_type_declaration,\n\t\tcalc_field_type_params\n\t) {\n\t\tcollection.calculated_fields[calc_field_name] = new CalculatedField(\n\t\t\tapp,\n\t\t\tcalc_field_name,\n\t\t\tcalc_field_type_declaration,\n\t\t\tcalc_field_type_params\n\t\t);\n\t},\n\tadd_special_filters(Collection, named_filters) {\n\t\tCollection.named_filters = named_filters;\n\t},\n\tget_unknown_field_errors: function(field_type_name, fields, values) {\n\t\tconst validation_errors = {};\n\t\tfor (const field_name in values) {\n\t\t\tif (fields[field_name] === undefined) {\n\t\t\t\tvalidation_errors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t`Unknown field '${field_name}' for resource-type '${field_type_name}'`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn validation_errors;\n\t},\n\tget_missing_values_checker: function(\n\t\tfields,\n\t\tvalues,\n\t\tassume_delete_value_on_missing_key,\n\t\told_values\n\t) {\n\t\tif (assume_delete_value_on_missing_key) {\n\t\t\treturn function(field_name) {\n\t\t\t\treturn (\n\t\t\t\t\tfields[field_name].required &&\n\t\t\t\t\tvalues[field_name] === undefined\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(field_name) {\n\t\t\t\treturn (\n\t\t\t\t\tfields[field_name].required &&\n\t\t\t\t\tvalues[field_name] === undefined &&\n\t\t\t\t\told_values[field_name] === undefined\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t},\n\tget_missing_field_values_errors: function(\n\t\tfields,\n\t\tvalues,\n\t\tassume_delete_value_on_missing_key,\n\t\told_values\n\t) {\n\t\tconst errors = {};\n\t\tconst checker_fn = Collection.pure.get_missing_values_checker(\n\t\t\tfields,\n\t\t\tvalues,\n\t\t\tassume_delete_value_on_missing_key,\n\t\t\told_values\n\t\t);\n\n\t\treturn Promise.filter(Object.keys(fields), checker_fn)\n\t\t\t.each(function(field_name) {\n\t\t\t\terrors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t`Missing value for field '${field_name}'`\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(function() {\n\t\t\t\treturn errors;\n\t\t\t});\n\t},\n\tget_invalid_field_values_errors: function(\n\t\tfields,\n\t\tcontext,\n\t\tvalues,\n\t\told_values\n\t) {\n\t\tconst errors = {};\n\t\tconst promises = [];\n\t\tfor (const field_name in values) {\n\t\t\tif (fields[field_name]) {\n\t\t\t\tconst value = values[field_name];\n\t\t\t\tif (value === \"\") continue;\n\t\t\t\tconst old_value = old_values\n\t\t\t\t\t? old_values[field_name]\n\t\t\t\t\t: undefined;\n\t\t\t\tconst promise = fields[field_name]\n\t\t\t\t\t.is_proper_value(context, value, old_value)\n\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof error === \"string\" ||\n\t\t\t\t\t\t\terror.type === \"validation\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\terrors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tpromises.push(promise);\n\t\t\t}\n\t\t}\n\t\treturn Promise.all(promises).then(function() {\n\t\t\treturn errors;\n\t\t});\n\t},\n\tget_missing_required_field_values: function(fields, new_values) {\n\t\tconst errors = {};\n\t\tfor (const field_name in new_values) {\n\t\t\tif (\n\t\t\t\tfields[field_name] &&\n\t\t\t\tfields[field_name].required &&\n\t\t\t\tnew_values[field_name] === \"\"\n\t\t\t) {\n\t\t\t\terrors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t`Missing value for required field: '${field_name}'`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t},\n\tvalidate_field_values: function(\n\t\tfield_type_name,\n\t\tfields,\n\t\tcontext,\n\t\tassume_delete_value_on_missing_key,\n\t\tnew_values,\n\t\told_values\n\t) {\n\t\tconst errors_array = [\n\t\t\tCollection.pure.get_missing_required_field_values(\n\t\t\t\tfields,\n\t\t\t\tnew_values\n\t\t\t),\n\t\t\tCollection.pure.get_unknown_field_errors(\n\t\t\t\tfield_type_name,\n\t\t\t\tfields,\n\t\t\t\tnew_values\n\t\t\t),\n\t\t\tCollection.pure.get_missing_field_values_errors(\n\t\t\t\tfields,\n\t\t\t\tnew_values,\n\t\t\t\tassume_delete_value_on_missing_key,\n\t\t\t\told_values\n\t\t\t),\n\t\t\tCollection.pure.get_invalid_field_values_errors(\n\t\t\t\tfields,\n\t\t\t\tcontext,\n\t\t\t\tnew_values,\n\t\t\t\told_values\n\t\t\t),\n\t\t];\n\n\t\treturn Promise.all(errors_array)\n\t\t\t.reduce(merge)\n\t\t\t.then(function(errors) {\n\t\t\t\tconst user_errors = {};\n\t\t\t\tconst non_user_errors = {};\n\t\t\t\tfor (const field_name in errors) {\n\t\t\t\t\tconst error = errors[field_name];\n\t\t\t\t\tif (error.is_user_fault) {\n\t\t\t\t\t\tuser_errors[field_name] = error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnon_user_errors[field_name] = error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst non_user_errors_amount = Object.keys(non_user_errors)\n\t\t\t\t\t.length;\n\t\t\t\tif (non_user_errors_amount > 0) {\n\t\t\t\t\tthrow non_user_errors[Object.keys(non_user_errors)[0]];\n\t\t\t\t}\n\t\t\t\tconst user_errors_amount = Object.keys(user_errors).length;\n\t\t\t\tif (user_errors_amount > 0) {\n\t\t\t\t\tthrow new Errors.ValidationError(\n\t\t\t\t\t\t\"There are problems with some of the provided values.\",\n\t\t\t\t\t\tuser_errors\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t},\n\tencode_field_values: async function(fields, context, body, old_body) {\n\t\tconst promises = {};\n\t\tfor (let field_name in fields) {\n\t\t\tconst field = fields[field_name];\n\t\t\tconst type = field.type;\n\t\t\tif (\n\t\t\t\t!body[field_name] &&\n\t\t\t\ttype.get_default_value &&\n\t\t\t\t(!old_body || old_body[field_name] === undefined)\n\t\t\t) {\n\t\t\t\tbody[field_name] = await type.get_default_value();\n\t\t\t}\n\t\t}\n\t\tfor (const field_name in body) {\n\t\t\tconst current_value = body[field_name];\n\t\t\tif (current_value === undefined || current_value === \"\") {\n\t\t\t\tpromises[field_name] = \"\";\n\t\t\t} else {\n\t\t\t\tconst old_value = old_body && old_body[field_name];\n\t\t\t\tpromises[field_name] = fields[field_name].encode(\n\t\t\t\t\tcontext,\n\t\t\t\t\tcurrent_value,\n\t\t\t\t\told_value\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Promise.props(promises);\n\t},\n\tget_specification: function(\n\t\tname,\n\t\thuman_readable_name,\n\t\tsummary,\n\t\tfields,\n\t\twith_validators\n\t) {\n\t\t// with_validators:boolean - whether to include validator functions in field descriptions. Warning! If set to true, the output is not serializable in JSON.\n\t\tconst collection_specification = {};\n\t\tfor (const field_name in fields) {\n\t\t\tconst field_specification = fields[field_name].get_specification(\n\t\t\t\twith_validators\n\t\t\t);\n\t\t\tcollection_specification[field_name] = field_specification;\n\t\t}\n\n\t\tconst specification = {\n\t\t\tname: name,\n\t\t\thuman_readable_name: human_readable_name,\n\t\t\tsummary: summary,\n\t\t\tfields: collection_specification,\n\t\t};\n\t\treturn specification;\n\t},\n\tset_access_strategy: function(app, collection, strategy_declaration) {\n\t\tif (\n\t\t\ttypeof strategy_declaration === \"string\" ||\n\t\t\tstrategy_declaration instanceof AccessStrategyType ||\n\t\t\tstrategy_declaration instanceof Array\n\t\t) {\n\t\t\tcollection.access_strategy = {\n\t\t\t\tdefault: new AccessStrategy(strategy_declaration),\n\t\t\t};\n\t\t} else if (typeof strategy_declaration === \"object\") {\n\t\t\tfor (const action_name in strategy_declaration) {\n\t\t\t\tconst access_strategy = strategy_declaration[action_name];\n\t\t\t\tcollection.access_strategy[action_name] = new AccessStrategy(\n\t\t\t\t\tapp,\n\t\t\t\t\taccess_strategy\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tget_access_strategy: function(access_strategy_map, action_name) {\n\t\tconst ret =\n\t\t\taccess_strategy_map[action_name] || access_strategy_map[\"default\"];\n\t\treturn ret;\n\t},\n\thas_large_data_fields: function(fields) {\n\t\tfor (const i in fields) {\n\t\t\tconst field = fields[i];\n\t\t\tif (field.type.handles_large_data) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tis_old_value_sensitive: function(fields, action_name) {\n\t\tfor (const i in fields) {\n\t\t\tif (fields[i].type.is_old_value_sensitive(action_name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tdecode_values: function(fields, context, values) {\n\t\tconst decoded_values = {};\n\t\tfor (const key in fields) {\n\t\t\tconst value = values[key];\n\t\t\tconst field = fields[key];\n\t\t\tif (field === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdecoded_values[key] = field.decode(context, value);\n\t\t}\n\t\treturn Promise.props(decoded_values);\n\t},\n\tformat_decoded_values: function(fields, context, decoded_values, format) {\n\t\tconst formatted_values = clone(decoded_values);\n\t\tfor (const field_name in formatted_values) {\n\t\t\tconst field_format = format[field_name] || undefined;\n\t\t\tconst decoded_value = decoded_values[field_name];\n\t\t\tformatted_values[field_name] = fields[field_name].format(\n\t\t\t\tcontext,\n\t\t\t\tdecoded_value,\n\t\t\t\tfield_format\n\t\t\t);\n\t\t}\n\t\treturn Promise.props(formatted_values);\n\t},\n\t_get_body: async function(fields, context, db_document, format) {\n\t\tconst decoded_values = await Collection.pure.decode_values(\n\t\t\tfields,\n\t\t\tcontext,\n\t\t\tdb_document.body\n\t\t);\n\t\treturn Collection.pure.format_decoded_values(\n\t\t\tfields,\n\t\t\tcontext,\n\t\t\tdecoded_values,\n\t\t\tformat || {}\n\t\t);\n\t},\n\t_get_calculated_fields: function(\n\t\tcontext,\n\t\tcalculated_fields,\n\t\trepresentation,\n\t\traw_db_entry,\n\t\tcalculate\n\t) {\n\t\tconst ret = {};\n\t\tfor (const field_name in calculated_fields) {\n\t\t\tif (calculate === true || calculate[field_name]) {\n\t\t\t\tret[field_name] = calculated_fields[field_name].get_value(\n\t\t\t\t\tcontext,\n\t\t\t\t\trepresentation,\n\t\t\t\t\traw_db_entry\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Promise.props(ret);\n\t},\n\tget_resource_representation: function(\n\t\tfields,\n\t\tfield_type_name,\n\t\tcontext,\n\t\tdb_document,\n\t\tformat,\n\t\tcalculated_fields,\n\t\tcalculate\n\t) {\n\t\tif (calculate === undefined) calculate = true;\n\t\tconst representation = {};\n\t\trepresentation.created_context = db_document.created_context;\n\t\trepresentation.last_modified_context =\n\t\t\tdb_document.last_modified_context;\n\t\trepresentation.id = db_document.sealious_id;\n\t\trepresentation.collection_name = field_type_name;\n\t\trepresentation.body = Collection.pure._get_body(\n\t\t\tfields,\n\t\t\tcontext,\n\t\t\tdb_document,\n\t\t\tformat\n\t\t);\n\t\tif (calculate) {\n\t\t\trepresentation.calculated_fields = Collection.pure._get_calculated_fields(\n\t\t\t\tcontext,\n\t\t\t\tcalculated_fields,\n\t\t\t\trepresentation,\n\t\t\t\tdb_document,\n\t\t\t\tcalculate\n\t\t\t);\n\t\t}\n\t\treturn Promise.props(representation);\n\t},\n\tcheck_if_action_is_allowed: function(\n\t\taccess_strategy_map,\n\t\tcontext,\n\t\taction_name,\n\t\tresource_representation\n\t) {\n\t\tconst access_strategy = Collection.pure.get_access_strategy(\n\t\t\taccess_strategy_map,\n\t\t\taction_name\n\t\t);\n\n\t\treturn access_strategy\n\t\t\t.check(context, resource_representation)\n\t\t\t.then(function(results) {\n\t\t\t\treturn results;\n\t\t\t});\n\t},\n\tget_aggregation_stages: function(\n\t\tcollection,\n\t\tcontext,\n\t\taction_name,\n\t\tquery_params,\n\t\tnamed_filters = []\n\t) {\n\t\tconst fields = collection.fields;\n\t\tconst access_strategy_map = collection.access_strategy;\n\n\t\tconst access_strategy = Collection.pure.get_access_strategy(\n\t\t\taccess_strategy_map,\n\t\t\taction_name\n\t\t);\n\n\t\treturn Promise.all([\n\t\t\tquery_params.search\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t\t$text: {\n\t\t\t\t\t\t\t\t\t$search: query_params.search.toString(),\n\t\t\t\t\t\t\t\t\t$caseSensitive: false,\n\t\t\t\t\t\t\t\t\t$diacriticSensitive: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: [],\n\t\t\taccess_strategy\n\t\t\t\t.getRestrictingQuery(context)\n\t\t\t\t.then(query => query.toPipeline()),\n\t\t\tPromise.all(\n\t\t\t\tObject.keys(fields).map(field_name =>\n\t\t\t\t\tfields[field_name].get_aggregation_stages(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tquery_params\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t).then(array =>\n\t\t\t\tarray.sort((a, b) => {\n\t\t\t\t\treturn Object.keys(a[0] || {})[0] === \"$match\" ? -1 : 1;\n\t\t\t\t})\n\t\t\t),\n\t\t\tPromise.map(named_filters, async named_filter =>\n\t\t\t\t(await collection.named_filters[named_filter].getFilteringQuery(\n\t\t\t\t\tcollection\n\t\t\t\t)).toPipeline()\n\t\t\t),\n\t\t])\n\t\t\t.map(Promise.all)\n\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t.reduce((a, b) => a.concat(b), []);\n\t},\n};\n\nconst pure = Collection.pure;\n\n// not all pure methods are linked here, because they are not intended to be called from outside\n\nCollection.prototype = {\n\tadd_field(field_declaration) {\n\t\treturn pure.add_field(\n\t\t\tthis.app,\n\t\t\tthis,\n\t\t\tthis.fields,\n\t\t\tfield_declaration,\n\t\t\tthis\n\t\t);\n\t},\n\tadd_fields(field_declarations_array) {\n\t\treturn pure.add_fields(\n\t\t\tthis.app,\n\t\t\tthis,\n\t\t\tthis.fields,\n\t\t\tfield_declarations_array\n\t\t);\n\t},\n\tadd_calculated_field(calc_field_name, type_declaration, type_params) {\n\t\treturn pure.add_calculated_field(\n\t\t\tthis.app,\n\t\t\tthis,\n\t\t\tcalc_field_name,\n\t\t\ttype_declaration,\n\t\t\ttype_params\n\t\t);\n\t},\n\tadd_special_filters: function(named_filters = []) {\n\t\treturn pure.add_special_filters(this, named_filters);\n\t},\n\tget_named_filter: function(filter_name) {\n\t\treturn this.named_filters[filter_name];\n\t},\n\tadd_named_filter: function(filter_name, filter) {\n\t\tthis.named_filters[filter_name] = filter;\n\t},\n\tvalidate_field_values(\n\t\tcontext,\n\t\tassume_delete_value_on_missing_key,\n\t\tnew_values,\n\t\told_values\n\t) {\n\t\treturn pure.validate_field_values(\n\t\t\tthis.name,\n\t\t\tthis.fields,\n\t\t\tcontext,\n\t\t\tassume_delete_value_on_missing_key,\n\t\t\tnew_values,\n\t\t\told_values\n\t\t);\n\t},\n\tencode_field_values(context, body, old_body) {\n\t\treturn pure.encode_field_values(this.fields, context, body, old_body);\n\t},\n\tget_specification(with_validators) {\n\t\treturn pure.get_specification(\n\t\t\tthis.name,\n\t\t\tthis.human_readable_name,\n\t\t\tthis.summary,\n\t\t\tthis.fields,\n\t\t\twith_validators\n\t\t);\n\t},\n\tset_access_strategy(strategy_declaration) {\n\t\treturn pure.set_access_strategy(this.app, this, strategy_declaration);\n\t},\n\tget_access_strategy(action_name) {\n\t\treturn pure.get_access_strategy(this.access_strategy, action_name);\n\t},\n\thas_large_data_fields() {\n\t\treturn pure.has_large_data_fields(this.fields);\n\t},\n\tis_old_value_sensitive(action_name) {\n\t\treturn pure.is_old_value_sensitive(this.fields, action_name);\n\t},\n\tdecoded_values(context, values) {\n\t\treturn pure.decode_values(this.fields, context, values);\n\t},\n\tformat_decoded_values(context, decoded_values, format) {\n\t\treturn pure.format_decoded_values(\n\t\t\tthis.fields,\n\t\t\tcontext,\n\t\t\tdecoded_values,\n\t\t\tformat\n\t\t);\n\t},\n\tget_resource_representation(context, db_document, format, calculate) {\n\t\treturn pure.get_resource_representation(\n\t\t\tthis.fields,\n\t\t\tthis.name,\n\t\t\tcontext,\n\t\t\tdb_document,\n\t\t\tformat,\n\t\t\tthis.calculated_fields,\n\t\t\tcalculate\n\t\t);\n\t},\n\tcheck_if_action_is_allowed(context, action_name, resource_representation) {\n\t\treturn pure.check_if_action_is_allowed(\n\t\t\tthis.access_strategy,\n\t\t\tcontext,\n\t\t\taction_name,\n\t\t\tresource_representation\n\t\t);\n\t},\n\tget_aggregation_stages(context, action_name, query_params, named_filters) {\n\t\treturn pure.get_aggregation_stages(\n\t\t\tthis,\n\t\t\tcontext,\n\t\t\taction_name,\n\t\t\tquery_params,\n\t\t\tnamed_filters\n\t\t);\n\t},\n};\n\nCollection.prototype.decode_db_entry =\n\tCollection.prototype.get_resource_representation;\n\nmodule.exports = Collection;\n","map":{"mappings":[{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/sealious/lib/chip-types/collection.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}}],"sources":{"node_modules/sealious/lib/chip-types/collection.js":"\"use strict\";\nconst locreq = require(\"locreq\")(__dirname);\nconst Promise = require(\"bluebird\");\nconst assert = require(\"assert\");\nconst merge = require(\"merge\");\nconst clone = require(\"clone\");\n\nconst Errors = locreq(\"lib/response/error.js\");\nconst Chip = require(\"./chip.js\");\nconst Field = require(\"./field.js\");\nconst CalculatedField = require(\"./calculated-field.js\");\nconst AccessStrategy = require(\"./access-strategy.js\");\nconst AccessStrategyType = locreq(\"lib/chip-types/access-strategy-type.js\");\n\nconst Collection = function(app, declaration) {\n\tif (typeof declaration === \"string\") {\n\t\treturn app.ChipManager.get_chip(\"collection\", declaration);\n\t} else if (declaration instanceof Collection) {\n\t\treturn declaration;\n\t}\n\n\tconst self = this;\n\tChip.call(this, \"collection\", declaration.name);\n\tthis.app = app;\n\tthis.name = declaration.name;\n\tthis.fields = {};\n\tthis.human_readable_name = declaration.human_readable_name;\n\tthis.summary = declaration.summary;\n\tthis.access_strategy = {\n\t\tdefault: new AccessStrategy(app, \"public\", {}),\n\t};\n\tassert(\n\t\tdeclaration.named_filters === undefined ||\n\t\t\ttypeof declaration.named_filters === \"object\"\n\t);\n\tthis.named_filters = declaration.named_filters || [];\n\n\tif (declaration) {\n\t\tif (declaration.fields) {\n\t\t\tfor (let i = 0; i < declaration.fields.length; i++) {\n\t\t\t\tif (declaration.fields[i].params) {\n\t\t\t\t\tif (typeof declaration.fields[i].params !== \"object\") {\n\t\t\t\t\t\tthrow new Errors.ValidationError(\n\t\t\t\t\t\t\t`In field \"${\n\t\t\t\t\t\t\t\tdeclaration.fields[i].name\n\t\t\t\t\t\t\t}\": \"params\" is of wrong type, it should be an object`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.add_fields(declaration.fields);\n\t\t}\n\n\t\tthis.calculated_fields = [];\n\t\tif (declaration.calculated_fields) {\n\t\t\tfor (const calc_field_name in declaration.calculated_fields) {\n\t\t\t\tconst calc_field_type_declaration =\n\t\t\t\t\tdeclaration.calculated_fields[calc_field_name][0];\n\t\t\t\tconst calc_field_type_params =\n\t\t\t\t\tdeclaration.calculated_fields[calc_field_name][1];\n\t\t\t\tthis.add_calculated_field(\n\t\t\t\t\tcalc_field_name,\n\t\t\t\t\tcalc_field_type_declaration,\n\t\t\t\t\tcalc_field_type_params\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.set_access_strategy(declaration.access_strategy);\n\t}\n};\n\nCollection.type_name = \"collection\";\n\nCollection.pure = {\n\tadd_field: function(\n\t\tapp,\n\t\tfield_type,\n\t\tfields,\n\t\tfield_declaration,\n\t\tcollection\n\t) {\n\t\tconst field_object = new Field(\n\t\t\tapp,\n\t\t\tfield_declaration,\n\t\t\tfield_type,\n\t\t\tcollection\n\t\t);\n\t\tconst field_name = field_object.name;\n\t\tif (!fields[field_name]) {\n\t\t\tfields[field_name] = field_object;\n\t\t} else {\n\t\t\tthrow new Errors.DeveloperError(\n\t\t\t\t`Duplicate field names: \"${field_name}\" in collection: \"${\n\t\t\t\t\tfield_type.name\n\t\t\t\t}\"`\n\t\t\t);\n\t\t}\n\t},\n\tadd_fields: function(app, field_type, fields, field_declarations_array) {\n\t\tfor (const i in field_declarations_array) {\n\t\t\tconst declaration = field_declarations_array[i];\n\t\t\tCollection.pure.add_field(app, field_type, fields, declaration);\n\t\t}\n\t},\n\tadd_calculated_field: function(\n\t\tapp,\n\t\tcollection,\n\t\tcalc_field_name,\n\t\tcalc_field_type_declaration,\n\t\tcalc_field_type_params\n\t) {\n\t\tcollection.calculated_fields[calc_field_name] = new CalculatedField(\n\t\t\tapp,\n\t\t\tcalc_field_name,\n\t\t\tcalc_field_type_declaration,\n\t\t\tcalc_field_type_params\n\t\t);\n\t},\n\tadd_special_filters(Collection, named_filters) {\n\t\tCollection.named_filters = named_filters;\n\t},\n\tget_unknown_field_errors: function(field_type_name, fields, values) {\n\t\tconst validation_errors = {};\n\t\tfor (const field_name in values) {\n\t\t\tif (fields[field_name] === undefined) {\n\t\t\t\tvalidation_errors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t`Unknown field '${field_name}' for resource-type '${field_type_name}'`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn validation_errors;\n\t},\n\tget_missing_values_checker: function(\n\t\tfields,\n\t\tvalues,\n\t\tassume_delete_value_on_missing_key,\n\t\told_values\n\t) {\n\t\tif (assume_delete_value_on_missing_key) {\n\t\t\treturn function(field_name) {\n\t\t\t\treturn (\n\t\t\t\t\tfields[field_name].required &&\n\t\t\t\t\tvalues[field_name] === undefined\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(field_name) {\n\t\t\t\treturn (\n\t\t\t\t\tfields[field_name].required &&\n\t\t\t\t\tvalues[field_name] === undefined &&\n\t\t\t\t\told_values[field_name] === undefined\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\t},\n\tget_missing_field_values_errors: function(\n\t\tfields,\n\t\tvalues,\n\t\tassume_delete_value_on_missing_key,\n\t\told_values\n\t) {\n\t\tconst errors = {};\n\t\tconst checker_fn = Collection.pure.get_missing_values_checker(\n\t\t\tfields,\n\t\t\tvalues,\n\t\t\tassume_delete_value_on_missing_key,\n\t\t\told_values\n\t\t);\n\n\t\treturn Promise.filter(Object.keys(fields), checker_fn)\n\t\t\t.each(function(field_name) {\n\t\t\t\terrors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t`Missing value for field '${field_name}'`\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(function() {\n\t\t\t\treturn errors;\n\t\t\t});\n\t},\n\tget_invalid_field_values_errors: function(\n\t\tfields,\n\t\tcontext,\n\t\tvalues,\n\t\told_values\n\t) {\n\t\tconst errors = {};\n\t\tconst promises = [];\n\t\tfor (const field_name in values) {\n\t\t\tif (fields[field_name]) {\n\t\t\t\tconst value = values[field_name];\n\t\t\t\tif (value === \"\") continue;\n\t\t\t\tconst old_value = old_values\n\t\t\t\t\t? old_values[field_name]\n\t\t\t\t\t: undefined;\n\t\t\t\tconst promise = fields[field_name]\n\t\t\t\t\t.is_proper_value(context, value, old_value)\n\t\t\t\t\t.catch(function(error) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof error === \"string\" ||\n\t\t\t\t\t\t\terror.type === \"validation\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\terrors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tpromises.push(promise);\n\t\t\t}\n\t\t}\n\t\treturn Promise.all(promises).then(function() {\n\t\t\treturn errors;\n\t\t});\n\t},\n\tget_missing_required_field_values: function(fields, new_values) {\n\t\tconst errors = {};\n\t\tfor (const field_name in new_values) {\n\t\t\tif (\n\t\t\t\tfields[field_name] &&\n\t\t\t\tfields[field_name].required &&\n\t\t\t\tnew_values[field_name] === \"\"\n\t\t\t) {\n\t\t\t\terrors[field_name] = new Errors.ValidationError(\n\t\t\t\t\t`Missing value for required field: '${field_name}'`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t},\n\tvalidate_field_values: function(\n\t\tfield_type_name,\n\t\tfields,\n\t\tcontext,\n\t\tassume_delete_value_on_missing_key,\n\t\tnew_values,\n\t\told_values\n\t) {\n\t\tconst errors_array = [\n\t\t\tCollection.pure.get_missing_required_field_values(\n\t\t\t\tfields,\n\t\t\t\tnew_values\n\t\t\t),\n\t\t\tCollection.pure.get_unknown_field_errors(\n\t\t\t\tfield_type_name,\n\t\t\t\tfields,\n\t\t\t\tnew_values\n\t\t\t),\n\t\t\tCollection.pure.get_missing_field_values_errors(\n\t\t\t\tfields,\n\t\t\t\tnew_values,\n\t\t\t\tassume_delete_value_on_missing_key,\n\t\t\t\told_values\n\t\t\t),\n\t\t\tCollection.pure.get_invalid_field_values_errors(\n\t\t\t\tfields,\n\t\t\t\tcontext,\n\t\t\t\tnew_values,\n\t\t\t\told_values\n\t\t\t),\n\t\t];\n\n\t\treturn Promise.all(errors_array)\n\t\t\t.reduce(merge)\n\t\t\t.then(function(errors) {\n\t\t\t\tconst user_errors = {};\n\t\t\t\tconst non_user_errors = {};\n\t\t\t\tfor (const field_name in errors) {\n\t\t\t\t\tconst error = errors[field_name];\n\t\t\t\t\tif (error.is_user_fault) {\n\t\t\t\t\t\tuser_errors[field_name] = error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnon_user_errors[field_name] = error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst non_user_errors_amount = Object.keys(non_user_errors)\n\t\t\t\t\t.length;\n\t\t\t\tif (non_user_errors_amount > 0) {\n\t\t\t\t\tthrow non_user_errors[Object.keys(non_user_errors)[0]];\n\t\t\t\t}\n\t\t\t\tconst user_errors_amount = Object.keys(user_errors).length;\n\t\t\t\tif (user_errors_amount > 0) {\n\t\t\t\t\tthrow new Errors.ValidationError(\n\t\t\t\t\t\t\"There are problems with some of the provided values.\",\n\t\t\t\t\t\tuser_errors\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t},\n\tencode_field_values: async function(fields, context, body, old_body) {\n\t\tconst promises = {};\n\t\tfor (let field_name in fields) {\n\t\t\tconst field = fields[field_name];\n\t\t\tconst type = field.type;\n\t\t\tif (\n\t\t\t\t!body[field_name] &&\n\t\t\t\ttype.get_default_value &&\n\t\t\t\t(!old_body || old_body[field_name] === undefined)\n\t\t\t) {\n\t\t\t\tbody[field_name] = await type.get_default_value();\n\t\t\t}\n\t\t}\n\t\tfor (const field_name in body) {\n\t\t\tconst current_value = body[field_name];\n\t\t\tif (current_value === undefined || current_value === \"\") {\n\t\t\t\tpromises[field_name] = \"\";\n\t\t\t} else {\n\t\t\t\tconst old_value = old_body && old_body[field_name];\n\t\t\t\tpromises[field_name] = fields[field_name].encode(\n\t\t\t\t\tcontext,\n\t\t\t\t\tcurrent_value,\n\t\t\t\t\told_value\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Promise.props(promises);\n\t},\n\tget_specification: function(\n\t\tname,\n\t\thuman_readable_name,\n\t\tsummary,\n\t\tfields,\n\t\twith_validators\n\t) {\n\t\t// with_validators:boolean - whether to include validator functions in field descriptions. Warning! If set to true, the output is not serializable in JSON.\n\t\tconst collection_specification = {};\n\t\tfor (const field_name in fields) {\n\t\t\tconst field_specification = fields[field_name].get_specification(\n\t\t\t\twith_validators\n\t\t\t);\n\t\t\tcollection_specification[field_name] = field_specification;\n\t\t}\n\n\t\tconst specification = {\n\t\t\tname: name,\n\t\t\thuman_readable_name: human_readable_name,\n\t\t\tsummary: summary,\n\t\t\tfields: collection_specification,\n\t\t};\n\t\treturn specification;\n\t},\n\tset_access_strategy: function(app, collection, strategy_declaration) {\n\t\tif (\n\t\t\ttypeof strategy_declaration === \"string\" ||\n\t\t\tstrategy_declaration instanceof AccessStrategyType ||\n\t\t\tstrategy_declaration instanceof Array\n\t\t) {\n\t\t\tcollection.access_strategy = {\n\t\t\t\tdefault: new AccessStrategy(strategy_declaration),\n\t\t\t};\n\t\t} else if (typeof strategy_declaration === \"object\") {\n\t\t\tfor (const action_name in strategy_declaration) {\n\t\t\t\tconst access_strategy = strategy_declaration[action_name];\n\t\t\t\tcollection.access_strategy[action_name] = new AccessStrategy(\n\t\t\t\t\tapp,\n\t\t\t\t\taccess_strategy\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\tget_access_strategy: function(access_strategy_map, action_name) {\n\t\tconst ret =\n\t\t\taccess_strategy_map[action_name] || access_strategy_map[\"default\"];\n\t\treturn ret;\n\t},\n\thas_large_data_fields: function(fields) {\n\t\tfor (const i in fields) {\n\t\t\tconst field = fields[i];\n\t\t\tif (field.type.handles_large_data) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tis_old_value_sensitive: function(fields, action_name) {\n\t\tfor (const i in fields) {\n\t\t\tif (fields[i].type.is_old_value_sensitive(action_name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tdecode_values: function(fields, context, values) {\n\t\tconst decoded_values = {};\n\t\tfor (const key in fields) {\n\t\t\tconst value = values[key];\n\t\t\tconst field = fields[key];\n\t\t\tif (field === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdecoded_values[key] = field.decode(context, value);\n\t\t}\n\t\treturn Promise.props(decoded_values);\n\t},\n\tformat_decoded_values: function(fields, context, decoded_values, format) {\n\t\tconst formatted_values = clone(decoded_values);\n\t\tfor (const field_name in formatted_values) {\n\t\t\tconst field_format = format[field_name] || undefined;\n\t\t\tconst decoded_value = decoded_values[field_name];\n\t\t\tformatted_values[field_name] = fields[field_name].format(\n\t\t\t\tcontext,\n\t\t\t\tdecoded_value,\n\t\t\t\tfield_format\n\t\t\t);\n\t\t}\n\t\treturn Promise.props(formatted_values);\n\t},\n\t_get_body: async function(fields, context, db_document, format) {\n\t\tconst decoded_values = await Collection.pure.decode_values(\n\t\t\tfields,\n\t\t\tcontext,\n\t\t\tdb_document.body\n\t\t);\n\t\treturn Collection.pure.format_decoded_values(\n\t\t\tfields,\n\t\t\tcontext,\n\t\t\tdecoded_values,\n\t\t\tformat || {}\n\t\t);\n\t},\n\t_get_calculated_fields: function(\n\t\tcontext,\n\t\tcalculated_fields,\n\t\trepresentation,\n\t\traw_db_entry,\n\t\tcalculate\n\t) {\n\t\tconst ret = {};\n\t\tfor (const field_name in calculated_fields) {\n\t\t\tif (calculate === true || calculate[field_name]) {\n\t\t\t\tret[field_name] = calculated_fields[field_name].get_value(\n\t\t\t\t\tcontext,\n\t\t\t\t\trepresentation,\n\t\t\t\t\traw_db_entry\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Promise.props(ret);\n\t},\n\tget_resource_representation: function(\n\t\tfields,\n\t\tfield_type_name,\n\t\tcontext,\n\t\tdb_document,\n\t\tformat,\n\t\tcalculated_fields,\n\t\tcalculate\n\t) {\n\t\tif (calculate === undefined) calculate = true;\n\t\tconst representation = {};\n\t\trepresentation.created_context = db_document.created_context;\n\t\trepresentation.last_modified_context =\n\t\t\tdb_document.last_modified_context;\n\t\trepresentation.id = db_document.sealious_id;\n\t\trepresentation.collection_name = field_type_name;\n\t\trepresentation.body = Collection.pure._get_body(\n\t\t\tfields,\n\t\t\tcontext,\n\t\t\tdb_document,\n\t\t\tformat\n\t\t);\n\t\tif (calculate) {\n\t\t\trepresentation.calculated_fields = Collection.pure._get_calculated_fields(\n\t\t\t\tcontext,\n\t\t\t\tcalculated_fields,\n\t\t\t\trepresentation,\n\t\t\t\tdb_document,\n\t\t\t\tcalculate\n\t\t\t);\n\t\t}\n\t\treturn Promise.props(representation);\n\t},\n\tcheck_if_action_is_allowed: function(\n\t\taccess_strategy_map,\n\t\tcontext,\n\t\taction_name,\n\t\tresource_representation\n\t) {\n\t\tconst access_strategy = Collection.pure.get_access_strategy(\n\t\t\taccess_strategy_map,\n\t\t\taction_name\n\t\t);\n\n\t\treturn access_strategy\n\t\t\t.check(context, resource_representation)\n\t\t\t.then(function(results) {\n\t\t\t\treturn results;\n\t\t\t});\n\t},\n\tget_aggregation_stages: function(\n\t\tcollection,\n\t\tcontext,\n\t\taction_name,\n\t\tquery_params,\n\t\tnamed_filters = []\n\t) {\n\t\tconst fields = collection.fields;\n\t\tconst access_strategy_map = collection.access_strategy;\n\n\t\tconst access_strategy = Collection.pure.get_access_strategy(\n\t\t\taccess_strategy_map,\n\t\t\taction_name\n\t\t);\n\n\t\treturn Promise.all([\n\t\t\tquery_params.search\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$match: {\n\t\t\t\t\t\t\t\t$text: {\n\t\t\t\t\t\t\t\t\t$search: query_params.search.toString(),\n\t\t\t\t\t\t\t\t\t$caseSensitive: false,\n\t\t\t\t\t\t\t\t\t$diacriticSensitive: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: [],\n\t\t\taccess_strategy\n\t\t\t\t.getRestrictingQuery(context)\n\t\t\t\t.then(query => query.toPipeline()),\n\t\t\tPromise.all(\n\t\t\t\tObject.keys(fields).map(field_name =>\n\t\t\t\t\tfields[field_name].get_aggregation_stages(\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tquery_params\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t).then(array =>\n\t\t\t\tarray.sort((a, b) => {\n\t\t\t\t\treturn Object.keys(a[0] || {})[0] === \"$match\" ? -1 : 1;\n\t\t\t\t})\n\t\t\t),\n\t\t\tPromise.map(named_filters, async named_filter =>\n\t\t\t\t(await collection.named_filters[named_filter].getFilteringQuery(\n\t\t\t\t\tcollection\n\t\t\t\t)).toPipeline()\n\t\t\t),\n\t\t])\n\t\t\t.map(Promise.all)\n\t\t\t.reduce((a, b) => a.concat(b), [])\n\t\t\t.reduce((a, b) => a.concat(b), []);\n\t},\n};\n\nconst pure = Collection.pure;\n\n// not all pure methods are linked here, because they are not intended to be called from outside\n\nCollection.prototype = {\n\tadd_field(field_declaration) {\n\t\treturn pure.add_field(\n\t\t\tthis.app,\n\t\t\tthis,\n\t\t\tthis.fields,\n\t\t\tfield_declaration,\n\t\t\tthis\n\t\t);\n\t},\n\tadd_fields(field_declarations_array) {\n\t\treturn pure.add_fields(\n\t\t\tthis.app,\n\t\t\tthis,\n\t\t\tthis.fields,\n\t\t\tfield_declarations_array\n\t\t);\n\t},\n\tadd_calculated_field(calc_field_name, type_declaration, type_params) {\n\t\treturn pure.add_calculated_field(\n\t\t\tthis.app,\n\t\t\tthis,\n\t\t\tcalc_field_name,\n\t\t\ttype_declaration,\n\t\t\ttype_params\n\t\t);\n\t},\n\tadd_special_filters: function(named_filters = []) {\n\t\treturn pure.add_special_filters(this, named_filters);\n\t},\n\tget_named_filter: function(filter_name) {\n\t\treturn this.named_filters[filter_name];\n\t},\n\tadd_named_filter: function(filter_name, filter) {\n\t\tthis.named_filters[filter_name] = filter;\n\t},\n\tvalidate_field_values(\n\t\tcontext,\n\t\tassume_delete_value_on_missing_key,\n\t\tnew_values,\n\t\told_values\n\t) {\n\t\treturn pure.validate_field_values(\n\t\t\tthis.name,\n\t\t\tthis.fields,\n\t\t\tcontext,\n\t\t\tassume_delete_value_on_missing_key,\n\t\t\tnew_values,\n\t\t\told_values\n\t\t);\n\t},\n\tencode_field_values(context, body, old_body) {\n\t\treturn pure.encode_field_values(this.fields, context, body, old_body);\n\t},\n\tget_specification(with_validators) {\n\t\treturn pure.get_specification(\n\t\t\tthis.name,\n\t\t\tthis.human_readable_name,\n\t\t\tthis.summary,\n\t\t\tthis.fields,\n\t\t\twith_validators\n\t\t);\n\t},\n\tset_access_strategy(strategy_declaration) {\n\t\treturn pure.set_access_strategy(this.app, this, strategy_declaration);\n\t},\n\tget_access_strategy(action_name) {\n\t\treturn pure.get_access_strategy(this.access_strategy, action_name);\n\t},\n\thas_large_data_fields() {\n\t\treturn pure.has_large_data_fields(this.fields);\n\t},\n\tis_old_value_sensitive(action_name) {\n\t\treturn pure.is_old_value_sensitive(this.fields, action_name);\n\t},\n\tdecoded_values(context, values) {\n\t\treturn pure.decode_values(this.fields, context, values);\n\t},\n\tformat_decoded_values(context, decoded_values, format) {\n\t\treturn pure.format_decoded_values(\n\t\t\tthis.fields,\n\t\t\tcontext,\n\t\t\tdecoded_values,\n\t\t\tformat\n\t\t);\n\t},\n\tget_resource_representation(context, db_document, format, calculate) {\n\t\treturn pure.get_resource_representation(\n\t\t\tthis.fields,\n\t\t\tthis.name,\n\t\t\tcontext,\n\t\t\tdb_document,\n\t\t\tformat,\n\t\t\tthis.calculated_fields,\n\t\t\tcalculate\n\t\t);\n\t},\n\tcheck_if_action_is_allowed(context, action_name, resource_representation) {\n\t\treturn pure.check_if_action_is_allowed(\n\t\t\tthis.access_strategy,\n\t\t\tcontext,\n\t\t\taction_name,\n\t\t\tresource_representation\n\t\t);\n\t},\n\tget_aggregation_stages(context, action_name, query_params, named_filters) {\n\t\treturn pure.get_aggregation_stages(\n\t\t\tthis,\n\t\t\tcontext,\n\t\t\taction_name,\n\t\t\tquery_params,\n\t\t\tnamed_filters\n\t\t);\n\t},\n};\n\nCollection.prototype.decode_db_entry =\n\tCollection.prototype.get_resource_representation;\n\nmodule.exports = Collection;\n"},"lineCount":672}},"hash":"d9f4b7a0ab25faaa474bf8eac3d93158","cacheData":{"env":{}}}