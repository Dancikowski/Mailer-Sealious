"use strict";

var _resourceTypeCollection = require("./mixins/resourceTypeCollection");

var _resourceTypeCollection2 = _interopRequireDefault(_resourceTypeCollection);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _merge = require("merge");

var _merge2 = _interopRequireDefault(_merge);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var default_props = {
	displayAttr: "id",
	valueAttr: "id",
	noValueOptionName: "--",
	allowNoValue: false,
	onValueChange: function onValueChange(value) {
		return alert(value);
	},
	label: "Select resource:",
	disabled: false,
	value: "",
	resources: [],
	displayAttrIsSafe: false
};

function getAttr(name, resource, props) {
	var propname = name + "Attr";
	if (typeof props[propname] === "string") {
		return resource[props[propname]] || resource.body[props[propname]];
	} else if (typeof props[propname] === "function") {
		return props[propname](resource);
	}
}

function getOptionValue(resource, props) {
	return getAttr("value", resource, props);
}

function getOptionName(resource, props) {
	return getAttr("display", resource, props);
}

function ResourceDropdownPure(props_arg) {
	var props = (0, _merge2.default)(true, default_props, props_arg);

	function handleChange(e) {
		props.onValueChange(e.target.value);
	}

	var options = props.resources.map(function (resource) {
		var value = getOptionValue(resource, props);
		var name = getOptionName(resource, props);
		var key = resource.id;
		if (props.displayAttrIsSafe) {
			return _react2.default.createElement("option", {
				value: value,
				key: key,
				dangerouslySetInnerHTML: { __html: name }
			});
		} else {
			return _react2.default.createElement(
				"option",
				{ value: value, key: key },
				name
			);
		}
	});

	if (props.allowNoValue) {
		options.unshift(_react2.default.createElement(
			"option",
			{ value: "", key: "empty" },
			props.noValueOptionName
		));
	}

	return _react2.default.createElement(
		_react2.default.Fragment,
		null,
		_react2.default.createElement(
			"label",
			{ className: props.labelClassName },
			props.label
		),
		_react2.default.createElement(
			"select",
			{
				onChange: handleChange,
				value: props.value,
				disabled: props.disabled,
				className: props.className
			},
			options
		)
	);
}

module.exports = (0, _resourceTypeCollection2.default)(ResourceDropdownPure);